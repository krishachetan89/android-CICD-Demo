/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin

def props = new Properties()
file("../signing.properties").withInputStream { props.load(it) }

static def getBuildVersion() {
    def version = 145
    def buildNumber = System.getenv("CIRCLE_BUILD_NUM")
    if (buildNumber != null) {
        version += buildNumber
    }
    println("VersionCode: " + version)
    return version
}
android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.krishna.chetan.sampleapp"
        minSdkVersion 18
        targetSdkVersion rootProject.targetSdkVersion
        versionCode getBuildVersion() as int
        versionName "4.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias props.getProperty('keyAlias')
            keyPassword props.getProperty('keyPassword')
            storeFile file(props.getProperty('storeFile'))
            storePassword props.getProperty('storePassword')
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifeCycleVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

}